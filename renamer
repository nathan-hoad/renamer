#!/usr/bin/env python
'''
Name: Nathan Hoad
Original Date Written: July 09 2010
Example: renamer "TV Show name - S04E%s" 1 test *
Usage: renamer [template] [start_number] [test or confirm] [files]...
Description: Simple batch file renamer. It automatically grabs the extension 
             of the particular file so it won't put the wrong extension on 
             rogue files.
'''

import os.path
import sys

def confirmed():
    """Get a Y/N answer from the user."""
    answer = raw_input("Are you sure? (Y/N): ")

    return True if answer in ('Y', 'y') else False

# get the starting number and the template to use
number = int(sys.argv[2])
template = sys.argv[1]

# check to see if test or confirmation was specified
test = True if "test" == sys.argv[3] else False
confirmation = True if "confirm" == sys.argv[3] else False

# account for the test or confirm options
files = sys.argv[4:] if test or confirmation else sys.argv[3:]

# get the how many files there are to process
fill_amount = len(files)

# figure out how much padding to do
fill_amount = len(str(fill_amount))

if fill_amount <= 1:
    fill_amount = 2

if test:
    print "Test mode is enabled. This will simply show what WOULD happen, it won't do anything."

for old_name in files:
    try:
        new_name = template % str(number).zfill(fill_amount) + os.path.splitext(old_name)[1]
        if os.path.isfile(new_name) and not test:
            print new_name, " ALREADY EXISTS. ABORTING"
            sys.exit(1)
        number = number + 1
        print "%s ==> %s" % (old_name, new_name)

        if confirmation and not confirmed():
            print "aborting"
            sys.exit(2)

        if not test:
            os.rename(old_name, new_name)
    except TypeError:
        print r"You're missing the %s in your template!"
