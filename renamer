#!/usr/bin/env python
'''
Name: Nathan Hoad
Original Date Written: July 09 2010
Usage: renamer [TEMPLATE] [START NUMBER] [OPTION] [FILE]..."
Example: renamer "TV Show name - S04E%s" 1 test *
Description: Simple batch file renamer. It automatically grabs the extension
             of the particular file so it won't put the wrong extension on
             rogue files.
'''

import os.path
import sys


def usage():
    """Display the program usage information"""
    print("Usage: renamer [TEMPLATE] [START NUMBER] [OPTION] [FILE]...\n",
    "Batch rename a list of files to conform to a TEMPLATE\n",
    "\nOptions:\n",
    "   test          display what WOULD happen\n",
    "   confirm       display a confirmation for each file\n",
    "\nReport any bugs to nathan@getoffmalawn.com")


def confirmed():
    """Get a Y/N answer from the user."""
    answer = raw_input("Are you sure? (Y/N): ")

    return True if answer in ('Y', 'y') else False

if len(sys.argv) == 1:
    usage()
    sys.exit(0)

# get the starting number and the template to use
number = int(sys.argv[2])
template = sys.argv[1]

# check to see if test or confirmation was specified
test = True if "test" == sys.argv[3] else False
confirmation = True if "confirm" == sys.argv[3] else False

# account for the test or confirm options
files = sys.argv[4:] if test or confirmation else sys.argv[3:]

# get the how many files there are to process
fill_amount = len(files)

# figure out how much padding to do
fill_amount = len(str(fill_amount))

if fill_amount <= 1:
    fill_amount = 2

if test:
    print("Test mode is enabled. This will simply show what WOULD happen,",\
        "it won't do anything.")

# get the terminal width to make output nice
term_width = int(os.popen('stty size', 'r',).read().split()[1])

try:
    for old_name in files:
        # get the new name, and put the number in with padded zeroes.
        new_name = template % str(number).zfill(fill_amount)
        # add the extension
        new_name += os.path.splitext(old_name)[1]

        if os.path.isfile(new_name) and not test:
            print(new_name, " ALREADY EXISTS. ABORTING")
            sys.exit(1)
        number = number + 1
        output = "%s ==> %s" % (old_name, new_name)
        print(output.rjust(term_width))

        if confirmation and not confirmed():
            print("aborting")
            sys.exit(2)

        if not test:
            os.rename(old_name, new_name)
except TypeError:
    print(r"You're missing the %s in your template!")
    sys.exit(3)
